// <auto-generated />
using System;
using FCG.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCG.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006180343_segunda-migracao")]
    partial class Segundamigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FCG.Domain.Entity.Genero", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_GENERO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_TITULO");

                    b.HasKey("Id");

                    b.ToTable("TB_GENERO", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.GrupoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_GRUPO_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_GRUPO");

                    b.HasKey("Id");

                    b.ToTable("TB_GRUPO_USUARIO", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_JOGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("DECIMAL(3,2)")
                        .HasColumnName("VLR_DESCONTO");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_GENERO");

                    b.Property<int>("PlataformaId")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_PLATAFORMA");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("VLR_PRECO");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_TITULO");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("TB_JOGO", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.Plataforma", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_PLATAFORMA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_TITULO");

                    b.HasKey("Id");

                    b.ToTable("TB_PLATAFORMA", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_EMAIL");

                    b.Property<int>("GrupoUsuarioId")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_GRUPO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("DSC_NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("DSC_SENHA");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GrupoUsuarioId");

                    b.ToTable("TB_USUARIO", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.UsuarioJogo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_USUARIO_JOGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DTH_CRIACAO");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_JOGO");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT")
                        .HasColumnName("ISN_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_USUARIO_JOGO", (string)null);
                });

            modelBuilder.Entity("FCG.Domain.Entity.Jogo", b =>
                {
                    b.HasOne("FCG.Domain.Entity.Genero", "Genero")
                        .WithMany("Jogos")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FCG.Domain.Entity.Plataforma", "Plataforma")
                        .WithMany("Jogos")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Plataforma");
                });

            modelBuilder.Entity("FCG.Domain.Entity.Usuario", b =>
                {
                    b.HasOne("FCG.Domain.Entity.GrupoUsuario", "GrupoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoUsuario");
                });

            modelBuilder.Entity("FCG.Domain.Entity.UsuarioJogo", b =>
                {
                    b.HasOne("FCG.Domain.Entity.Jogo", "Jogo")
                        .WithMany("UsuarioJogos")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FCG.Domain.Entity.Usuario", "Usuario")
                        .WithMany("UsuarioJogos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FCG.Domain.Entity.Genero", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FCG.Domain.Entity.GrupoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FCG.Domain.Entity.Jogo", b =>
                {
                    b.Navigation("UsuarioJogos");
                });

            modelBuilder.Entity("FCG.Domain.Entity.Plataforma", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FCG.Domain.Entity.Usuario", b =>
                {
                    b.Navigation("UsuarioJogos");
                });
#pragma warning restore 612, 618
        }
    }
}
